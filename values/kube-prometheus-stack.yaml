# https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack

fullnameOverride: "kps"

global:
  rbac:
    create: true
    pspEnabled: false

defaultRules:
  create: true

alertmanager:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx" 
      cert-manager.io/cluster-issuer: "letsencrypt-prod"      
    hosts:
    - alertmanager.lab.kevinf.xyz
    paths:
    - /
    pathType: Prefix
    tls:
    - secretName: alertmanager-tls
      hosts:
      - alertmanager.lab.kevinf.xyz
  alertmanagerSpec:
    replicas: 1
    retention: 168h
    resources:
      requests:
        memory: "200Mi"
    storage:
      volumeClaimTemplate:
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: kps
        spec:
          storageClassName: iscsi
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi

grafana:
  enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx" 
      cert-manager.io/cluster-issuer: "letsencrypt-prod"      
    hosts:
    - grafana.lab.kevinf.xyz
    pathType: Prefix
    tls:
    - secretName: grafana-tls
      hosts:
      - grafana.lab.kevinf.xyz
  additionalDataSources: []
  persistence:
    enabled: true
    type: pvc
    storageClassName: nfs
    accessModes:
    - ReadWriteOnce
    size: 1Gi
  initChownData:
    enabled: false
  rbac:
    pspEnabled: false
    pspUseAppArmor: false
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

prometheus:
  enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx" 
      cert-manager.io/cluster-issuer: "letsencrypt-prod"  
    hosts:
    - prometheus.lab.kevinf.xyz
    paths:
    - /
    pathType: Prefix
    tls:
    - secretName: prometheus-tls
      hosts:
      - prometheus.lab.kevinf.xyz
  prometheusSpec:
    replicas: 1
    scrapeInterval: 60s
    retention: 15d
    secrets:
    - etcd-client
    resources:
      requests:
        memory: "600Mi"
    storageSpec:
      volumeClaimTemplate:
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: kps
        spec:
          storageClassName: iscsi
          accessModes: 
          - ReadWriteOnce
          resources:
            requests:
              storage: 20Gi

kubeApiServer:
  enabled: true
  tlsConfig:
    serverName: kubernetes
    insecureSkipVerify: true

kubelet:
  enabled: true

kubeControllerManager:
  enabled: true
  service:
    enabled: true
    port: 10257
    targetPort: 10257
    selector:
      component: kube-controller-manager
  serviceMonitor:
    enabled: true
    https: true
    insecureSkipVerify: true

coreDns:
  enabled: true

kubeEtcd:
  enabled: true
  serviceMonitor:
    scheme: https
    insecureSkipVerify: false
    caFile: /etc/prometheus/secrets/etcd-client/ca.crt
    certFile: /etc/prometheus/secrets/etcd-client/healthcheck-client.crt
    keyFile: /etc/prometheus/secrets/etcd-client/healthcheck-client.key

kubeScheduler:
  enabled: true
  service:
    enabled: true
    port: 10259
    targetPort: 10259
    selector:
      component: kube-scheduler
  serviceMonitor:
    enabled: true
    https: true
    insecureSkipVerify: true

kubeProxy:
  enabled: true
  service:
    enabled: true
    port: 10249
    targetPort: 10249
    selector:
      k8s-app: kube-proxy

kubeStateMetrics:
  enabled: true

nodeExporter:
  enabled: true

prometheusOperator:
  enabled: true
  resources:
    requests:
      cpu: 100m
      memory: 100Mi

kube-state-metrics:
  podSecurityPolicy:
    enabled: false

prometheus-node-exporter:
  rbac:
    pspEnabled: false
